<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:objEnums="clr-namespace:SATools.SAModel.ObjData;assembly=SAModel"
    xmlns:num="http://gu.se/NumericInput"
    xmlns:sub="clr-namespace:SAModel.WPF.Inspector.XAML.SubControls"
    xmlns:local="clr-namespace:SAModel.WPF.Inspector.XAML"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:numerics="clr-namespace:System.Numerics;assembly=System.Numerics"
    xmlns:structs="clr-namespace:SATools.SAModel.Structs;assembly=SAModel">

    <!--Note: datatypes do not reflect datacontext type, but the Inspector binding type-->
    
    <DataTemplate x:Key="/" />

    <DataTemplate x:Key="OpenButton">
        <sub:DetailButton Content="{Binding DetailName}" local:InspectorBinding.PropName="DetailObject">
            <sub:DetailButton.Style>
                <Style TargetType="{x:Type sub:DetailButton}">
                    <Style.Triggers>
                        <Trigger Property="DetailObject" Value="{x:Null}">
                            <Setter Property="IsEnabled" Value="False"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </sub:DetailButton.Style>
        </sub:DetailButton>
    </DataTemplate>

    <DataTemplate x:Key="OnlyHex">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <TextBlock Text="0x" TextAlignment="Right" VerticalAlignment="Center" Margin="4,0,0,0" ToolTip="Hexadecimal prependix"/>
            <ContentPresenter Grid.Column="1" Name="Hex" Content="{Binding }" ContentTemplateSelector="{x:Static local:InspectorElementTemplateSelector.Selector}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="HybridHex">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>


            <ContentPresenter Name="NoHex" Content="{Binding }" ContentTemplateSelector="{x:Static local:InspectorElementTemplateSelector.Selector}"/>
            <Border BorderThickness="0" Grid.Column="1" Background="#2444"/>
            <ContentPresenter Grid.Column="2" Content="{Binding }" ContentTemplate="{StaticResource OnlyHex}"/>
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="String" DataType="{x:Type sys:String}">
        <TextBox BorderThickness="0" Padding="2" local:InspectorBinding.PropName="Text"
                 IsReadOnly="{Binding IsReadOnly}" ToolTip="{Binding Tooltip}"
                 Background="Transparent"/>
    </DataTemplate>

    <!--#region Number templates-->

    <Style x:Key="BaseNumberStyle" 
           TargetType="{x:Type num:BaseBox}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="2"/>
        <Setter Property="ValidationTrigger" Value="PropertyChanged"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <DataTemplate x:Key="Vector2" DataType="{x:Type numerics:Vector2}">
        <sub:UcVector2 local:InspectorBinding.PropName="Value" BaseBoxStyle="{StaticResource BaseNumberStyle}"/>
    </DataTemplate>

    <DataTemplate x:Key="Vector3" DataType="{x:Type numerics:Vector3}">
        <sub:UcVector3 local:InspectorBinding.PropName="Value" BaseBoxStyle="{StaticResource BaseNumberStyle}"/>
    </DataTemplate>

    <DataTemplate x:Key="Vector4" DataType="{x:Type numerics:Vector4}">
        <sub:UcVector4 local:InspectorBinding.PropName="Value" BaseBoxStyle="{StaticResource BaseNumberStyle}"/>
    </DataTemplate>

    <DataTemplate x:Key="Quaternion" DataType="{x:Type numerics:Quaternion}">
        <sub:UcQuaternion local:InspectorBinding.PropName="Value" BaseBoxStyle="{StaticResource BaseNumberStyle}"/>
    </DataTemplate>

    <DataTemplate x:Key="Matrix4x4" DataType="{x:Type numerics:Matrix4x4}">
        <sub:UcMatrixDisplay local:InspectorBinding.PropName="Value" BaseBoxStyle="{StaticResource BaseNumberStyle}"/>
    </DataTemplate>

    <DataTemplate x:Key="Bounds" DataType="{x:Type structs:Bounds}">
        <sub:UcBounds local:InspectorBinding.PropName="Value" BaseBoxStyle="{StaticResource BaseNumberStyle}"/>
    </DataTemplate>

    <Style x:Key="NumberStyle" 
           TargetType="{x:Type num:BaseBox}"
           BasedOn="{StaticResource BaseNumberStyle}">
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}"/>
        <Setter Property="local:InspectorBinding.PropName" Value="Value"/>
    </Style>

    <DataTemplate x:Key="Int64" DataType="{x:Type sys:Int64}">
        <sub:LongBox ToolTip="Signed 64 bit integer ( Long )"
            Style="{StaticResource NumberStyle}"/>
    </DataTemplate>

    <DataTemplate x:Key="UInt64" DataType="{x:Type sys:UInt64}">
        <sub:ULongBox ToolTip="Unsigned 64 bit integer ( ULong )"
            Style="{StaticResource NumberStyle}"/>
    </DataTemplate>

    <DataTemplate x:Key="Int32" DataType="{x:Type sys:Int32}">
        <num:IntBox ToolTip="Signed 32 bit integer ( Int )"
            Style="{StaticResource NumberStyle}"/>
    </DataTemplate>

    <DataTemplate x:Key="UInt32" DataType="{x:Type sys:UInt32}">
        <sub:UIntBox ToolTip="Unsigned 32 bit integer ( UInt )"
            Style="{StaticResource NumberStyle}"/>
    </DataTemplate>

    <DataTemplate x:Key="Int16" DataType="{x:Type sys:Int16}">
        <num:ShortBox ToolTip="Signed 16 bit integer ( Short )"
            Style="{StaticResource NumberStyle}"/>
    </DataTemplate>

    <DataTemplate x:Key="UInt16" DataType="{x:Type sys:UInt16}">
        <sub:UShortBox ToolTip="Unsigned 16 bit integer ( UShort )"
            Style="{StaticResource NumberStyle}"/>
    </DataTemplate>

    <DataTemplate x:Key="Double" DataType="{x:Type sys:Double}">
        <num:DoubleBox ToolTip="64 bit floating point number ( Double )"
            Style="{StaticResource NumberStyle}"/>
    </DataTemplate>

    <DataTemplate x:Key="Single" DataType="{x:Type sys:Single}">
        <num:FloatBox ToolTip="32 bit floating point number ( Single )"
            Style="{StaticResource NumberStyle}"/>
    </DataTemplate>

    <!--#endregion-->

    <!--#region Hexadecimal templates-->

    <Style x:Key="HexNumberStyle" 
           TargetType="{x:Type num:BaseBox}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0,2,2,2"/>
        <Setter Property="IsReadOnly" Value="{Binding IsReadOnly}"/>
        <Setter Property="ToolTip" Value="{Binding Tooltip}"/>
        <Setter Property="ValidationTrigger" Value="PropertyChanged"/>
        <Setter Property="TextAlignment" Value="Left"/>
        <Setter Property="local:InspectorBinding.PropName" Value="Value"/>
        <Setter Property="IsEnabled" Value="False"/>
        <!--Well, we gotta wait for a fix... till then, this is disabled-->

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Transparent"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="Hex:Int64" DataType="{x:Type sys:Int64}">
        <sub:LongBox ToolTip="Hexadecimal signed 64 bit integer ( Long )"
            Style="{StaticResource HexNumberStyle}" 
            MaxLength="16" StringFormat="X16"/>
    </DataTemplate>

    <DataTemplate x:Key="Hex:UInt64" DataType="{x:Type sys:UInt64}">
        <sub:ULongBox ToolTip="Hexadecimal unsigned 64 bit integer ( ULong )"
            Style="{StaticResource HexNumberStyle}" 
            MaxLength="16" StringFormat="X16"/>
    </DataTemplate>

    <DataTemplate x:Key="Hex:Int32" DataType="{x:Type sys:Int32}">
        <num:IntBox ToolTip="Hexadecimal signed 32 bit integer ( Int )"
            Style="{StaticResource HexNumberStyle}" 
            MaxLength="8" StringFormat="X8"/>
    </DataTemplate>

    <DataTemplate x:Key="Hex:UInt32" DataType="{x:Type sys:UInt32}">
        <sub:UIntBox ToolTip="Hexadecimal unsigned 32 bit integer ( UInt )"
            Style="{StaticResource HexNumberStyle}" 
            MaxLength="8" StringFormat="X8"/>
    </DataTemplate>

    <DataTemplate x:Key="Hex:Int16" DataType="{x:Type sys:Int16}">
        <num:ShortBox ToolTip="Hexadecimal signed 16 bit integer ( Short )"
            Style="{StaticResource HexNumberStyle}" 
            MaxLength="4" StringFormat="X4"/>
    </DataTemplate>

    <DataTemplate x:Key="Hex:UInt16" DataType="{x:Type sys:UInt16}">
        <sub:UShortBox ToolTip="Hexadecimal unsigned 16 bit integer ( ZShort )"
            Style="{StaticResource HexNumberStyle}" 
            MaxLength="4" StringFormat="X4"/>
    </DataTemplate>


    <!--#endregion-->

    <!--The enums and flags are manually edited in so we can create tooltips and custom names-->
    <!--It'd be a bit weird to add in display attributes to a data library-->

    <!--#region Enums-->

    <Style x:Key="EnumComboBoxStyle" TargetType="{x:Type sub:EnumComboBox}">

        <Style.Triggers>
            <DataTrigger Binding="{Binding IsReadOnly}" Value="True">
                <Setter Property="IsReadOnly" Value="True"/>

                <Setter Property="ItemContainerStyle">
                    <Setter.Value>
                        <Style TargetType="{x:Type ComboBoxItem}">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>
                        </Style>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="LandtableFormat" DataType="{x:Type objEnums:LandtableFormat}">
        <sub:EnumComboBox ToolTip="Landtable Data Format" local:InspectorBinding.PropName="Value" Style="{StaticResource EnumComboBoxStyle}">
            <ComboBoxItem Content="SA1"    Tag="{x:Static objEnums:LandtableFormat.SA1}"       ToolTip="Sonic Adventure 1 LandTable (BASIC)"/>
            <ComboBoxItem Content="SADX"   Tag="{x:Static objEnums:LandtableFormat.SADX}"      ToolTip="Sonic Adventure DX LandTable (BASIC)"/>
            <ComboBoxItem Content="SA2"    Tag="{x:Static objEnums:LandtableFormat.SA2}"       ToolTip="Sonic Adventure 2 LandTable (CHUNK / BASIC)"/>
            <ComboBoxItem Content="SA2B"   Tag="{x:Static objEnums:LandtableFormat.SA2B}"      ToolTip="Sonic Adventure 2: Battle LandTable (GC / BASIC)"/>
            <ComboBoxItem Content="Buffer" Tag="{x:Static objEnums:LandtableFormat.Buffer}"    ToolTip="SAModel library intermediate LandTable (Buffer)"/>
        </sub:EnumComboBox>
    </DataTemplate>

    <!--#endregion-->

    <!--#region Flags-->

    <!--#region Styles-->
    
    <Style x:Key="FlagListItem" TargetType="{x:Type sub:FlagListItem}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"/>

        <Style.Triggers>
            <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                <Setter Property="Background" Value="#4888"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="FlagList"
           TargetType="{x:Type sub:FlagListBox}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="SelectionMode" Value="Multiple"/>
        <Setter Property="local:InspectorBinding.PropName" Value="Value"/>
        <Setter Property="AlternationCount" Value="2"/>
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type sub:FlagListItem}" BasedOn="{StaticResource FlagListItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type sub:FlagListItem}">
                                <Grid ToolTip="{TemplateBinding ToolTip}" Background="{TemplateBinding Background}">
                                    
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="auto"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>

                                    <CheckBox IsChecked="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                              Margin="2,0,2,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    <ContentPresenter Grid.Column="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HexFlagItem"
        TargetType="{x:Type sub:HexFlagListItem}"
        BasedOn="{StaticResource FlagListItem}">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type sub:HexFlagListItem}">
                    <Grid ToolTip="{TemplateBinding ToolTip}" Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>

                        <CheckBox IsChecked="{Binding IsSelected, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                  Margin="2,0,2,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <ContentPresenter Grid.Column="1" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <TextBlock Grid.Column="2" Text="{Binding HexValue, RelativeSource={RelativeSource TemplatedParent}}"
                                   Margin="0,0,4,0" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HexFlagList2"
           TargetType="{x:Type sub:FlagListBox}"
           BasedOn="{StaticResource FlagList}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type sub:HexFlagListItem}" BasedOn="{StaticResource HexFlagItem}">
                    <Setter Property="HexLength" Value="2"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HexFlagList4"
           TargetType="{x:Type sub:FlagListBox}"
           BasedOn="{StaticResource FlagList}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type sub:HexFlagListItem}" BasedOn="{StaticResource HexFlagItem}">
                    <Setter Property="HexLength" Value="4"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HexFlagList8"
           TargetType="{x:Type sub:FlagListBox}"
           BasedOn="{StaticResource FlagList}">
        <Setter Property="ItemContainerStyle" Value="{StaticResource HexFlagItem}"/>
    </Style>

    <Style x:Key="HexFlagList16"
           TargetType="{x:Type sub:FlagListBox}"
           BasedOn="{StaticResource FlagList}">
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type sub:HexFlagListItem}" BasedOn="{StaticResource HexFlagItem}">
                    <Setter Property="HexLength" Value="16"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <DataTemplate x:Key="ObjectAttributes" DataType="{x:Type objEnums:ObjectAttributes}">
        <sub:FlagListBox Style="{StaticResource HexFlagList2}">
            <sub:HexFlagListItem Content="No Position"  Flag="{x:Static objEnums:ObjectAttributes.NoPosition}"    ToolTip="No/Ignore position Data"/>
            <sub:HexFlagListItem Content="No Rotation"  Flag="{x:Static objEnums:ObjectAttributes.RotateZYX}"     ToolTip="No/Ignore rotation Data"/>
            <sub:HexFlagListItem Content="No Scale"     Flag="{x:Static objEnums:ObjectAttributes.NoScale}"       ToolTip="No/Ignore scale Data"/>
            <sub:HexFlagListItem Content="No Display"   Flag="{x:Static objEnums:ObjectAttributes.NoDisplay}"     ToolTip="No/Ignore display Task"/>
            <sub:HexFlagListItem Content="No Children"  Flag="{x:Static objEnums:ObjectAttributes.NoChildren}"    ToolTip="No/Ignore children"/>
            <sub:HexFlagListItem Content="Rotate ZYX"   Flag="{x:Static objEnums:ObjectAttributes.RotateZYX}"     ToolTip="Inverted euler rotation"/>
            <sub:HexFlagListItem Content="No Animate"   Flag="{x:Static objEnums:ObjectAttributes.NoAnimate}"     ToolTip="Ignore object for animations"/>
            <sub:HexFlagListItem Content="No Morph"     Flag="{x:Static objEnums:ObjectAttributes.NoMorph}"       ToolTip="Ignore object for morphs"/>
        </sub:FlagListBox>
    </DataTemplate>

    <DataTemplate x:Key="LandtableAttributes" DataType="{x:Type objEnums:LandtableAttributes}">
        <sub:FlagListBox Style="{StaticResource HexFlagList8}">
            <sub:HexFlagListItem Content="Enable Motions"         Flag="{x:Static objEnums:LandtableAttributes.EnableMotions}" ToolTip="Enable/Contains geometry animations"/>
            <sub:HexFlagListItem Content="Load Texture List"      Flag="{x:Static objEnums:LandtableAttributes.LoadTexlist}"/>
            <sub:HexFlagListItem Content="Custom Draw Distance"   Flag="{x:Static objEnums:LandtableAttributes.CustomDrawDistance}" ToolTip="Utilize the custom draw distance"/>
            <sub:HexFlagListItem Content="Load Texture File"      Flag="{x:Static objEnums:LandtableAttributes.LoadTextureFile}" ToolTip="Load the specified texture file"/>
        </sub:FlagListBox>
    </DataTemplate>

    <!--#endregion-->

</ResourceDictionary>