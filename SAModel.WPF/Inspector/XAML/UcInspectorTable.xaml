<UserControl x:Class="SAModel.WPF.Inspector.XAML.UcInspectorTable"
             x:ClassModifier="internal"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:SAModel.WPF.Inspector.XAML"
             xmlns:vm="clr-namespace:SAModel.WPF.Inspector.Viewmodel"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="400"
             d:DataContext="{x:Static local:DesignDataFactory.DebugInspectorViewmodel}"
             x:Name="Root" x:FieldModifier="private">

    <UserControl.Resources>
        <DataTemplate x:Key="GridTemplate" DataType="{x:Type vm:InspectorViewModel}">
            <ScrollViewer 
                VerticalScrollBarVisibility="Auto" 
                HorizontalScrollBarVisibility="Disabled"
                Background="Transparent"
                CanContentScroll="True"
                PreviewMouseWheel="ScrollViewer_PreviewMouseWheel">

                <DataGrid 
                    ItemsSource="{Binding InspectorElements}" 
                    AutoGenerateColumns="False" 
                    VerticalGridLinesBrush="DarkGray"
                    GridLinesVisibility="None"
                    CanUserResizeRows="False"
                    CanUserSortColumns="True"
                    MinRowHeight="24"
                    BorderThickness="0"
                    VerticalScrollBarVisibility="Disabled"
                    HorizontalScrollBarVisibility="Disabled"
                    HeadersVisibility="None"
                    AlternationCount="2">

                    <DataGrid.Resources>
                        <Style x:Key="{x:Type DataGridCell}" TargetType="{x:Type DataGridCell}">
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Background" Value="{x:Null}"/>
                                    <Setter Property="BorderBrush" Value="{x:Null}" />
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.Resources>


                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Style.Triggers>
                                <Trigger Property="AlternationIndex" Value="1">
                                    <Setter Property="Background" Value="#EEE"/>
                                </Trigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                                        <Condition Binding="{Binding SelectBackground}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <MultiDataTrigger.Setters>
                                        <Setter Property="Background" Value="#c1dbe6"/>
                                    </MultiDataTrigger.Setters>
                                </MultiDataTrigger>

                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>

                    <DataGrid.Columns>
                        <DataGridTextColumn Binding="{Binding DisplayName}" Width="auto">
                            <DataGridTextColumn.ElementStyle>
                                <Style TargetType="{x:Type TextBlock}">
                                    <Setter Property="VerticalAlignment" Value="Center"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                    <Setter Property="Margin" Value="4,0,6,0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>

                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                    <Setter Property="VerticalContentAlignment" Value="Center"/>
                                    <Setter Property="ToolTip" Value="{Binding Tooltip}"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Background" Value="#18808080"/>

                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Background" Value="#18808080"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>

                        </DataGridTextColumn>
                        <DataGridTemplateColumn Width="*" 
                           CellTemplateSelector="{x:Static local:InspectorElementTemplateSelector.Selector}">
                            <DataGridTemplateColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Margin" Value="0"/>
                                </Style>
                            </DataGridTemplateColumn.CellStyle>
                        </DataGridTemplateColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </ScrollViewer>
        </DataTemplate>
        <DataTemplate x:Key="ListTemplate">
            <ListView ItemsSource="{Binding ItemWrappers}">
                <ListView.ItemContainerStyle>
                    <Style TargetType="{x:Type ListViewItem}">
                        <Setter Property="BorderThickness" Value="0"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                    </Style>
                </ListView.ItemContainerStyle>
                
                <ListView.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="50"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="{Binding ValueIndex}" FontWeight="Bold"/>
                            <ContentPresenter Grid.Column="1" Content="{Binding }"
                                ContentTemplateSelector="{x:Static local:InspectorElementTemplateSelector.Selector}"/>
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </ListView>
        </DataTemplate>
    </UserControl.Resources>
    
    <Border Margin="4" BorderThickness="1" BorderBrush="LightGray">
        <ContentPresenter Content="{Binding }" 
            ContentTemplateSelector="{x:Static local:InspectorTypeTemplateSelector.Selector}"/>
    </Border>
</UserControl>
